/*
 Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example, given the array [-2,1,-3,4,-1,2,1,-5,4],
the contiguous subarray [4,-1,2,1] has the largest sum = 6. 
*/

class Solution {
    public int maxSubArray(int[] nums) {
        int sum = 0;
        int max = Integer.MIN_VALUE;
        for(int i = 0; i < nums.length; i++)
        {
            sum += nums[i];  //用sum记录当前子数组的和
            max = Math.max(max,sum); //记录加入nums[i]后的sum的最大值
            sum = Math.max(sum, 0); //如果sum是负数，就清零，从数组的下一个元素开始一个新的子数组
        }
        return max;
    }
}
